specVersion: 0.0.2
description: Venus is an open-source protocol for algorithmic, efficient Money Markets on the BSC blockchain.
repository: https://github.com/VenusProtocol/subgraphs
schema:
  file: ./schema.graphql
dataSources:
  - kind: ethereum/contract
    name: PoolRegistry
    network: {{ network }}
    source:
      address: "{{ poolRegistryAddress }}"
      abi: PoolRegistry
      startBlock: {{ startBlock }}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      file: ./src/mappings/poolRegistry.ts
      entities:
        - PoolRegistry
        - Comptroller
      abis:
        - name: PoolRegistry
          file: ../../node_modules/@venusprotocol/isolated-pools/artifacts/contracts/Pool/PoolRegistry.sol/PoolRegistry.json
        - name: Comptroller
          file: ../../node_modules/@venusprotocol/isolated-pools/artifacts/contracts/Comptroller.sol/Comptroller.json
        - name: VToken
          file: ../../node_modules/@venusprotocol/isolated-pools/artifacts/contracts/VToken.sol/VToken.json
        - name: PriceOracle
          file: ../../node_modules/@venusprotocol/oracle/artifacts/contracts/PriceOracle.sol/PriceOracle.json
        - name: BEP20
          file: ../../packages/isolated-pools-abis/Bep20.json
        - name: PoolLens
          file: ../../node_modules/@venusprotocol/isolated-pools/artifacts/contracts/Lens/PoolLens.sol/PoolLens.json
        - name: RewardsDistributor
          file: ../../node_modules/@venusprotocol/isolated-pools/artifacts/contracts/Rewards/RewardsDistributor.sol/RewardsDistributor.json
      eventHandlers:
        - event: PoolRegistered(indexed address,(string,address,address,uint256,uint256))
          handler: handlePoolRegistered
        - event: PoolNameSet(indexed address,string,string)
          handler: handlePoolNameSet
        - event: MarketAdded(indexed address,address)
          handler: handleMarketAdded
        - event: PoolMetadataUpdated(indexed address,(uint8,string,string,string),(uint8,string,string,string))
          handler: handlePoolMetadataUpdated

templates:
  - name: Pool
    kind: ethereum/contract
    network: {{ network }}
    source:
      abi: Comptroller
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      file: ./src/mappings/pool.ts
      entities:
        - User
        - Market
        - VTokenInfo
        - PoolAction
      abis:
        - name: Comptroller
          file: ../../node_modules/@venusprotocol/isolated-pools/artifacts/contracts/Comptroller.sol/Comptroller.json
        - name: PoolRegistry
          file: ../../node_modules/@venusprotocol/isolated-pools/artifacts/contracts/Pool/PoolRegistry.sol/PoolRegistry.json
        - name: VToken
          file: ../../node_modules/@venusprotocol/isolated-pools/artifacts/contracts/VToken.sol/VToken.json
        - name: BEP20
          file: ../../packages/isolated-pools-abis/Bep20.json
        - name: PoolLens
          file: ../../node_modules/@venusprotocol/isolated-pools/artifacts/contracts/Lens/PoolLens.sol/PoolLens.json
        - name: PriceOracle
          file: ../../node_modules/@venusprotocol/oracle/artifacts/contracts/PriceOracle.sol/PriceOracle.json
        - name: RewardsDistributor
          file: ../../node_modules/@venusprotocol/isolated-pools/artifacts/contracts/Rewards/RewardsDistributor.sol/RewardsDistributor.json
      eventHandlers:
        - event: MarketEntered(address,address)
          handler: handleMarketEntered
        - event: MarketExited(address,address)
          handler: handleMarketExited
        - event: NewCloseFactor(uint256,uint256)
          handler: handleNewCloseFactor
        - event: NewCollateralFactor(address,uint256,uint256)
          handler: handleNewCollateralFactor
        - event: NewLiquidationThreshold(address,uint256,uint256)
          handler: handleNewLiquidationThreshold
        - event: NewLiquidationIncentive(uint256,uint256)
          handler: handleNewLiquidationIncentive
        - event: NewPriceOracle(address,address)
          handler: handleNewPriceOracle
        - event: ActionPausedMarket(address,uint8,bool)
          handler: handleActionPausedMarket
        - event: NewBorrowCap(indexed address,uint256)
          handler: handleNewBorrowCap
        - event: NewMinLiquidatableCollateral(uint256,uint256)
          handler: handleNewMinLiquidatableCollateral
        - event: NewSupplyCap(indexed address,uint256)
          handler: handleNewSupplyCap
        - event: NewRewardsDistributor(indexed address)
          handler: handleNewRewardsDistributor
  - name: VToken
    kind: ethereum/contract
    network: {{ network }}
    source:
      abi: VToken
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      file: ./src/mappings/vToken.ts
      entities:
        - User
        - Market
        - VTokenInfo
      abis:
        - name: VToken
          file: ../../node_modules/@venusprotocol/isolated-pools/artifacts/contracts/VToken.sol/VToken.json
        - name: PriceOracle
          file: ../../node_modules/@venusprotocol/oracle/artifacts/contracts/PriceOracle.sol/PriceOracle.json
        - name: BEP20
          file: ../../packages/isolated-pools-abis/Bep20.json
        - name: Comptroller
          file: ../../node_modules/@venusprotocol/isolated-pools/artifacts/contracts/Comptroller.sol/Comptroller.json
        - name: PoolLens
          file: ../../node_modules/@venusprotocol/isolated-pools/artifacts/contracts/Lens/PoolLens.sol/PoolLens.json
      eventHandlers:
        - event: Mint(indexed address,uint256,uint256,uint256)
          handler: handleMint
        - event: Redeem(indexed address,uint256,uint256,uint256)
          handler: handleRedeem
        - event: Borrow(indexed address,uint256,uint256,uint256)
          handler: handleBorrow
        - event: RepayBorrow(indexed address,indexed address,uint256,uint256,uint256)
          handler: handleRepayBorrow
        - event: LiquidateBorrow(indexed address,indexed address,uint256,indexed address,uint256)
          handler: handleLiquidateBorrow
        - event: AccrueInterest(uint256,uint256,uint256,uint256)
          handler: handleAccrueInterest
        - event: NewReserveFactor(uint256,uint256)
          handler: handleNewReserveFactor
        - event: Transfer(indexed address,indexed address,uint256)
          handler: handleTransfer
        - event: NewMarketInterestRateModel(indexed address,indexed address)
          handler: handleNewMarketInterestRateModel
        - event: BadDebtIncreased(indexed address,uint256,uint256,uint256)
          handler: handleBadDebtIncreased
        - event: NewAccessControlManager(indexed address,indexed address)
          handler: handleNewAccessControlManager
        - event: ReservesAdded(indexed address,uint256,uint256)
          handler: handleReservesAdded
        - event: ReservesReduced(indexed address,uint256,uint256)
          handler: handleReservesReduced
  - name: RewardsDistributor
    kind: ethereum/contract
    network: {{ network }}
    source:
      abi: RewardsDistributor
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      file: ./src/mappings/rewardsDistributor.ts
      entities:
        - RewardsDistributor
        - AccountRewards
      abis:
        - name: RewardsDistributor
          file: ../../node_modules/@venusprotocol/isolated-pools/artifacts/contracts/Rewards/RewardsDistributor.sol/RewardsDistributor.json
      eventHandlers:
        - event: RewardTokenBorrowSpeedUpdated(indexed address,uint256)
          handler: handleRewardTokenBorrowSpeedUpdated
        - event: RewardTokenSupplySpeedUpdated(indexed address,uint256)
          handler: handleRewardTokenSupplySpeedUpdated
  - name: Shortfall
    kind: ethereum/contract
    network: {{ network }}
    source:
      abi: Shortfall
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      file: ./src/mappings/shortfall.ts
      entities:
        - Auction
      abis:
        - name: Shortfall
          file: ../../node_modules/@venusprotocol/isolated-pools/artifacts/contracts/Shortfall/Shortfall.sol/Shortfall.json
      eventHandlers:
        - event: AuctionStarted(indexed address,uint256,uint8,address[],uint256[],uint256,uint256)
          handler: handleAuctionStarted
        - event: AuctionRestarted(indexed address)
          handler: handleAuctionRestarted
        - event: AuctionClosed(indexed address,indexed address,uint256,uint256,address[],uint256[])
          handler: handleAuctionClosed
        - event: BidPlaced(indexed address,uint256,indexed address)
          handler: handleBidPlaced
